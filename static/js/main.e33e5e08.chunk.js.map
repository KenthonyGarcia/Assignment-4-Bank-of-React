{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","credits","map","credit","date","slice","amount","description","id","event","Date","toISOString","addCredit","min","step","Debits","debits","debit","addDebit","App","temp","Math","round","curCredits","push","Number","curDebits","logInInfo","newUser","currentUser","a","credit_total","debit_total","axios","get","result","data","console","log","status","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e33e5e08.chunk.js","sourcesContent":["/*==================================================\r\nsrc/components/AccountBalance.js\r\n\r\nThe AccountBalance component displays account balance. It is included in other page views.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\n\r\nclass AccountBalance extends Component {\r\n  // Display account balance\r\n  render() {\r\n    return (\r\n      <div>\r\n        Balance: {this.props.accountBalance}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountBalance;","/*==================================================\r\nsrc/components/Home.js\r\n\r\nThe Home component is used to demonstrate the use of Link.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\r\n\r\n        <h1>Bank of React</h1>\r\n\r\n        <Link to=\"/userProfile\">User Profile</Link>\r\n        <br/>\r\n        <Link to=\"/login\">Login</Link>\r\n        <br/>\r\n        <Link to=\"/credits\">Credits</Link>\r\n        <br/>\r\n        <Link to=\"/debits\">Debits</Link>\r\n        <br/><br/>\r\n        <AccountBalance accountBalance={this.props.accountBalance}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","/*==================================================\r\nsrc/components/UserProfile.js\r\n\r\nThe UserProfile component is used to demonstrate the use of Route and Link.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>User Profile</h1>\r\n\r\n        <div>Username: {this.props.userName}</div>\r\n        <div>Member Since: {this.props.memberSince}</div>\r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;","/*==================================================\r\nsrc/components/Login.js\r\n\r\nThe LogIn component is used to demonstrate the use of Redirect.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass LogIn extends Component {\r\n  constructor (props) {  // Create and initialize state\r\n    super(props)\r\n    this.state = {\r\n      user: {\r\n        //userName: '',\r\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\r\n        password: ''\r\n      },\r\n      redirect: false  // Redirect property used to trigger Redirect\r\n    }\r\n  }\r\n\r\n  // When User Name input is changed, capture the new input value and update state\r\n  handleChange = (e) => {\r\n    const updatedUser = {...this.state.user}  // Create an object for state\r\n    updatedUser.userName = e.target.value  // Set object's userName to the new input value\r\n    this.setState({user: updatedUser})  // Update state with object values\r\n  }\r\n\r\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\r\n    this.setState({redirect: true})  // Update state to trigger Redirect\r\n  }\r\n  \r\n  render () {\r\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\r\n    if (this.state.redirect) {  \r\n      return (<Redirect to=\"/userProfile\"/>)\r\n    }\r\n\r\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        \r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label>User Name</label>\r\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\r\n          </div>\r\n          <div>\r\n            <label>Password</label>\r\n            <input type=\"password\" name=\"password\" />\r\n          </div>\r\n          <button>Log In</button>\r\n        </form>  \r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LogIn","/*==================================================\r\nsrc/components/Credits.js\r\n\r\nThe Credits component contains information for Credits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport {Link} from 'react-router-dom';\r\nimport AccountBalance from './AccountBalance';\r\n\r\nconst Credits = (props) => {\r\n  // Create the list of Credits items\r\n  let creditsView = () => {\r\n    const { credits } = props;\r\n    return credits.map((credit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each credits JSON array element\r\n      let date = credit.date.slice(0,10);\r\n      return <li key={credit.id}>{credit.amount} {credit.description} {date}</li>\r\n    }) \r\n  }\r\n  const handleSubmit = (event) =>\r\n  {\r\n    event.preventDefault();\r\n    let date = new Date().toISOString(); //generate the date for the object\r\n    let credit = {\r\n      amount: event.target.amount.value,\r\n      date: date,\r\n      description: event.target.description.value,\r\n    }//credit json object to be added to list\r\n    props.addCredit(credit); //add the new object to the credit list\r\n  }\r\n  // Render the list of credit items and a form to input new credit item\r\n  return (\r\n    <div>\r\n      <h1>Credits</h1>\r\n      <AccountBalance accountBalance={props.accountBalance}/> \r\n      <br/>\r\n      \r\n      {creditsView()}\r\n      <form onSubmit={event => {handleSubmit(event)} }>\r\n        <input type=\"text\" name=\"description\" />\r\n        <input type=\"number\" name=\"amount\" min=\"0\" step=\".01\"/>\r\n        <button type=\"submit\">Add Credit</button>\r\n      </form>\r\n      <br/>\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Credits;","/*==================================================\r\nsrc/components/Debits.js\r\n\r\nThe Debits component contains information for Debits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport {Link} from 'react-router-dom';\r\nimport AccountBalance from './AccountBalance';\r\n\r\nconst Debits = (props) => {\r\n  // Create the list of Debit items\r\n  let debitsView = () => {\r\n    const { debits } = props;\r\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\r\n      let date = debit.date.slice(0,10);\r\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\r\n    }) \r\n  }\r\n  const handleSubmit = (event) =>\r\n  {\r\n    event.preventDefault();\r\n    let date = new Date().toISOString(); //generate the date for the object\r\n    let debit = {\r\n      amount: event.target.amount.value,\r\n      date: date,\r\n      description: event.target.description.value,\r\n    }//credit json object to be added to list\r\n    props.addDebit(debit); //add the new object to the credit list\r\n  }\r\n  // Render the list of Debit items and a form to input new Debit item\r\n  return (\r\n    <div>\r\n      <h1>Debits</h1>\r\n      <AccountBalance accountBalance={props.accountBalance}/>\r\n      <br/>\r\n      {debitsView()}\r\n\r\n      <form onSubmit={event => {handleSubmit(event)} }>\r\n        <input type=\"text\" name=\"description\" />\r\n        <input type=\"number\" name=\"amount\" step=\".01\"/>\r\n        <button type=\"submit\">Add Debit</button>\r\n      </form>\r\n      <br/>\r\n      \r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Debits;","/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n// Import other components\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport Credits from './components/Credits';\r\nimport Debits from './components/Debits';\r\n\r\nclass App extends Component {\r\n  constructor() {  // Create and initialize state\r\n    super(); \r\n    this.state = {\r\n      accountBalance: 0.00,\r\n      credits: [],\r\n      debits: [],\r\n      currentUser: {\r\n        userName: 'Joe Smith',\r\n        memberSince: '11/22/99',\r\n      }\r\n    }\r\n  }\r\n  async componentDidMount() \r\n  {\r\n    let credit_total = 0\r\n    let debit_total = 0\r\n    //retrieving credits from api\r\n    try \r\n    {\r\n      let result = await axios.get('https://moj-api.herokuapp.com/credits');\r\n      this.setState({credits: result.data});//setting creditList to the data from result\r\n      for (let credit of this.state.credits) \r\n      { \r\n        credit_total += credit.amount;//getting the total credits that will be subtracted by total debits for accountbalance\r\n      }\r\n      \r\n    }\r\n    catch (error) \r\n    {\r\n      if (error.result) \r\n      {\r\n        console.log(error.result.data);\r\n        console.log(error.result.status);\r\n      }\r\n    }\r\n    try \r\n    {\r\n      let result = await axios.get('https://moj-api.herokuapp.com/debits');\r\n      this.setState({debits: result.data});//setting debitList to the data from result\r\n      for (let debit of this.state.debits) \r\n      { \r\n        debit_total -= debit.amount;//getting the total debits\r\n      }\r\n      \r\n    }\r\n    catch (error) \r\n    {\r\n      if (error.result) \r\n      {\r\n        console.log(error.result.data);\r\n        console.log(error.result.status);\r\n      }\r\n    }\r\n    this.setState({accountBalance:Math.round((credit_total+debit_total) * 100) / 100});//dividing number by 100 to get the hundredths place\r\n  }\r\n  \r\n  addCredit = (credit) => \r\n  {\r\n    let temp = {}; //create a temporary object that will contain the added credits description, amount, and date.\r\n    temp.id = credit.id;\r\n    temp.description = credit.description;\r\n    temp.amount = Math.round(credit.amount * 100)/100;\r\n    temp.date = credit.date;\r\n    let curCredits = this.state.credits; //setting new list to old list\r\n    curCredits.push(temp);\r\n    this.setState({credit: curCredits});\r\n    //updating account balance\r\n    this.setState({accountBalance: Math.round((Number(this.state.accountBalance) + Number(credit.amount)) * 100) / 100}); //set account balance to the new balance\r\n  }\r\n  addDebit = (debit) => \r\n  {\r\n    let temp = {}; //create a temporary object that will contain the added debits description, amount, and date.\r\n    temp.id = debit.id;\r\n    temp.description = debit.description;\r\n    temp.amount = Math.round(debit.amount * 100)/100;\r\n    temp.date = debit.date;\r\n    let curDebits = this.state.debits; //setting new list to old list\r\n    curDebits.push(temp);\r\n    this.setState({debit: curDebits});\r\n    //updating account balance\r\n    this.setState({accountBalance: Math.round((Number(this.state.accountBalance) - Number(debit.amount)) * 100) / 100}); //set account balance to the new balance\r\n  }\r\n\r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {  \r\n    const newUser = {...this.state.currentUser}\r\n    newUser.userName = logInInfo.userName\r\n    this.setState({currentUser: newUser})\r\n  }\r\n  \r\n  // Create Routes and React elements to be rendered using React components\r\n  render() {  \r\n    // Create React elements and pass input props to components\r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />);\r\n    const UserProfileComponent = () => (\r\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\r\n    );\r\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\r\n    const CreditsComponent = () => (<Credits credits={this.state.credits} accountBalance={this.state.accountBalance} addCredit = {this.addCredit}/>)//make the accountBalance a component of credits\r\n    const DebitsComponent = () => (<Debits debits={this.state.debits} accountBalance={this.state.accountBalance} addDebit = {this.addDebit}/>) \r\n\r\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\r\n    return (\r\n      <Router basename=\"/Assignment-4-Bank-of-React\">\r\n        <div>\r\n          <Route exact path=\"/\" render={HomeComponent}/>\r\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\r\n          <Route exact path=\"/login\" render={LogInComponent}/>\r\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\r\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/*==================================================\r\nsrc/index.js\r\n\r\nThis file renders the top-level component App which contains all components of the app).\r\n==================================================*/\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}